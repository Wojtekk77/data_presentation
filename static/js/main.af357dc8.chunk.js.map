{"version":3,"sources":["reportWebVitals.js","layouts/Navigation/TopBarNavigation.js","acions/authActions.js","layouts/Header.js","pages/Homepage.js","components/Chart.js","components/MyPieChart.js","components/DataTable.js","acions/filterActions.js","layouts/Navigation/PageNavigation.js","pages/Charts.js","acions/dataActions.js","layouts/Page.js","layouts/Footer.js","layouts/Navigation/AsideNavigation.js","layouts/App.js","reducers/authReducer.js","reducers/dataReducer.js","reducers/filterReducer.js","reducers/combinedReducer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","connect","state","isLoggedIn","auth","dispatch","type","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Form","inline","Button","variant","onClick","Header","props","Row","Col","xs","storeData","data","chartData","wykresy","activeColumns","map","el","ResponsiveContainer","minHeight","AreaChart","width","height","margin","top","right","left","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","XAxis","dataKey","tick","fontSize","interval","YAxis","allowDataOverflow","domain","Tooltip","Area","stroke","fillOpacity","fill","MyPieChart","COLORS","renderLegend","payload","entry","index","style","color","length","X","PieChart","Pie","innerRadius","outerRadius","nameKey","valueKey","Cell","Legend","content","layout","verticalAlign","align","filter","dataName","columns","downloadData","cols","field","headerName","concat","name","rows","pageSize","rowHeight","columnsWidth","to","target","download","activeColumnsAction","setActiveColumn","onSelect","e","reset","options","selectedValues","onRemove","displayValue","disablePreSelectedValues","closeOnSelect","avoidHighlightFirstOption","addData","columnNames","addDataAction","setActiveColumns","setColumns","console","log","match","params","transpose","array","reduce","prev","next","item","i","roundBigData","arr","n","Math","round","roundBigNumber","useEffect","Axios","get","result","Papa","parse","replace","dynamicTyping","correctedData","newArr","clearDummyData","join","proceedData","header","meta","fields","slice","path","exact","component","Homepage","Charts","Footer","list","nav","Item","App","Container","fluid","initialState","preselectedValues","rootReducer","combineReducers","action","alreadyIn","active","some","sort","a","b","Number","col","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af357dc8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { authAction } from \"../../acions/authActions\";\r\nimport { Navbar, Nav, Form, Button } from \"react-bootstrap\";\r\n\r\nexport const TopBarNavigation = ({ isLoggedIn, auth }) => {\r\n  return (\r\n    <Navbar bg=\"white\" expand=\"lg\">\r\n      <Navbar.Brand href=\"#home\">Zadanie rekrutacyjne React</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"m-auto\">\r\n          <Nav.Link href=\"#charts\">Wykresy</Nav.Link>\r\n          <Nav.Link href=\"#table\">Tabela</Nav.Link>\r\n        </Nav>\r\n        <Form inline>\r\n          <Button variant=\"outline-success\" onClick={() => auth()}>\r\n            {isLoggedIn ? \"Wyloguj\" : \"Zaloguj\"}\r\n          </Button>\r\n        </Form>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    auth: () => dispatch(authAction()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBarNavigation);\r\n","export const authAction = () => {\r\n  return { type: \"TOGGLE_AUTH\" };\r\n};\r\n","import React from \"react\";\r\nimport TopBarNavigation from \"../layouts/Navigation/TopBarNavigation\";\r\n\r\nexport const Header = (props) => {\r\n  return (\r\n    <>\r\n      <TopBarNavigation />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nexport const Homepage = (props) => {\r\n  return (\r\n    <Row className=\"justify-content-md-center pt-5\">\r\n      <Col xs={4}>\r\n        <div className=\"card border-secondary mb-3\">\r\n          <div className=\"card-header\">\r\n            <h2>Cześć :)</h2>\r\n          </div>\r\n          <div className=\"card-body text-secondary\">\r\n            <h5 className=\"card-title\">Dlaczego zależy mi na tej pracy?</h5>\r\n            <p>\r\n              Na studiach matematycznych często zajęcia wiązały się z\r\n              przerabianiem, kalkulowaniem i prezentacją danych. Co mocno\r\n              wpisywałoby się w opis stanowiska.\r\n            </p>\r\n            <p>\r\n              Do <b>Insert'u</b> chciałbym dołączyć ze względów, że zajmujecie\r\n              się właśnie w dużej mierze pracą z danymi.\r\n            </p>\r\n\r\n            <h5 className=\"card-title\">\r\n              Dlaczego rezygnuje z poprzedniej pracy?\r\n            </h5>\r\n            <p>\r\n              Jest kilka powodów dlaczego chce zrezygnować z mojej obecnej\r\n              pracy:\r\n            </p>\r\n            <ul>\r\n              <li>\r\n                pierwszym jest to, że w obecnej pracy muszę robić wszystko i nic\r\n              </li>\r\n              <li>\r\n                drugim natomiast jest fakt, że projekty w których biorę udział\r\n                nie rozwijają mnie i chciałbym robić coś więcej\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  AreaChart,\r\n  Area,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nexport const Chart = ({ chartData, activeColumns }) => {\r\n  const wykresy = activeColumns.map((el) => {\r\n    return (\r\n      <div key={el.id} className=\"card my-4\">\r\n        <div className=\"card-block\">\r\n          <h6 className=\"pl-3\">Wykres dla kolumny {el.id}</h6>\r\n          <ResponsiveContainer minHeight={300}>\r\n            <AreaChart\r\n              width={900}\r\n              height={300}\r\n              data={chartData.chartData}\r\n              margin={{\r\n                top: 10,\r\n                right: 25,\r\n                left: 15,\r\n                bottom: 0,\r\n              }}\r\n            >\r\n              <defs>\r\n                <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                  <stop offset=\"5%\" stopColor=\"#54D8FF\" stopOpacity={0.8} />\r\n                  <stop offset=\"95%\" stopColor=\"#54D8FF\" stopOpacity={0} />\r\n                </linearGradient>\r\n              </defs>\r\n              <CartesianGrid strokeDasharray=\"\" />\r\n              <XAxis dataKey=\"X\" tick={{ fontSize: \"11px\" }} interval={0} />\r\n              <YAxis\r\n                allowDataOverflow={true}\r\n                type=\"number\"\r\n                domain={[\"auto\", \"auto\"]}\r\n              />\r\n              <Tooltip />\r\n              <Area\r\n                type=\"monotone\"\r\n                dataKey={el.id}\r\n                stroke=\"#54D8FF\"\r\n                fillOpacity={1}\r\n                fill=\"url(#colorUv)\"\r\n              />\r\n            </AreaChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <>{wykresy}</>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  storeData: state.data,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chart);\r\n","import React from \"react\";\r\nimport { PieChart, Pie, Cell, ResponsiveContainer, Legend } from \"recharts\";\r\n\r\nconst MyPieChart = ({ chartData, activeColumns }) => {\r\n  const COLORS = [\r\n    \"#55D8FE\",\r\n    \"#FD8373\",\r\n    \"#5EE2A0\",\r\n    \"#428df5\",\r\n    \"#cef542\",\r\n    \"#f542c2\",\r\n    \"#42f2f5\",\r\n    \"#e9f542\",\r\n    \"#f56942\",\r\n    \"#42e9f5\",\r\n    \"#e342f5\",\r\n    \"#f54248\",\r\n  ];\r\n\r\n  const renderLegend = (props) => {\r\n    const { payload } = props;\r\n\r\n    return (\r\n      <ul>\r\n        {payload.map((entry, index) => {\r\n          return (\r\n            <li\r\n              style={{ color: COLORS[index % COLORS.length] }}\r\n              key={`item-${index}`}\r\n            >\r\n              {entry.payload.X}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  const wykresy = activeColumns.map((el) => {\r\n    return (\r\n      <div key={el.id} className=\"card my-4\">\r\n        <div className=\"card-block text-center\">\r\n          <h6>Wykres dla kolumny {el.id}</h6>\r\n          <ResponsiveContainer minHeight={300}>\r\n            <PieChart>\r\n              <Pie\r\n                innerRadius={50}\r\n                outerRadius={80}\r\n                dataKey={el.id}\r\n                data={chartData.chartData}\r\n                nameKey=\"vehicleNumber\"\r\n                valueKey=\"X\"\r\n                fill=\"#8884d8\"\r\n                // label\r\n              >\r\n                {chartData.chartData.map((entry, index) => (\r\n                  <Cell\r\n                    key={`cell-${index}`}\r\n                    fill={COLORS[index % COLORS.length]}\r\n                  />\r\n                ))}\r\n              </Pie>\r\n              <Legend\r\n                content={renderLegend}\r\n                layout=\"vertical\"\r\n                verticalAlign=\"middle\"\r\n                align=\"right\"\r\n              />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <>{wykresy}</>;\r\n};\r\nexport default MyPieChart;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\n\r\nexport const DataTable = ({ chartData, dataName, columns }) => {\r\n  const downloadData = `data/${dataName}.csv`;\r\n\r\n  let cols = [{ field: \"id\", headerName: \"X\" }].concat(\r\n    columns.map((el) => {\r\n      return { field: el.id, headerName: el.name };\r\n    })\r\n  );\r\n\r\n  const rows = chartData.chartData.map((el) => {\r\n    return { ...el, id: el.X };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={cols}\r\n          pageSize={7}\r\n          rowHeight={38}\r\n          columnsWidth={170}\r\n        />\r\n      </div>\r\n      <p>\r\n        <Link to={downloadData} target=\"_blank\" download>\r\n          pobierz csv\r\n        </Link>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  activeColumns: state.filter.activeColumns,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DataTable);\r\n","export const activeColumnsAction = (activeColumns) => {\r\n  return { type: \"ACTIVE_COLUMNS\", activeColumns };\r\n};\r\n\r\nexport const setColumnsAction = (columns) => {\r\n  console.log(\"columns in action\", columns);\r\n  return { type: \"SET_COLUMNS\", columns };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, Button } from \"react-bootstrap\";\r\nimport \"../../styles/PageNavigation.css\";\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport { activeColumnsAction } from \"../../acions/filterActions\";\r\nexport const PageNavigation = ({ filter, setActiveColumn }) => {\r\n  const onSelect = (e) => {\r\n    setActiveColumn(e);\r\n  };\r\n\r\n  const onRemove = (e) => {\r\n    onSelect(e);\r\n  };\r\n\r\n  const reset = (e) => {\r\n    onSelect(e);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {filter ? (\r\n        <Row className=\"pageNavigation py-5 text-center\">\r\n          <Col xs={8}>\r\n            <Multiselect\r\n              options={filter.columns} // Options to display in the dropdown\r\n              selectedValues={filter.activeColumns} // Preselected value to persist in dropdown\r\n              onSelect={(e) => onSelect(e)} // Function will trigger on select event\r\n              onRemove={(e) => onRemove(e)} // Function will trigger on remove event\r\n              displayValue=\"name\" // Property name to display in the dropdown options\r\n              disablePreSelectedValues={false}\r\n              closeOnSelect={false}\r\n              avoidHighlightFirstOption={true}\r\n            />\r\n          </Col>\r\n\r\n          <Col xs={4}>\r\n            <Button\r\n              className=\"mx-2\"\r\n              onClick={() =>\r\n                reset(filter.activeColumns.filter((e) => e.name === \"Y1\"))\r\n              }\r\n            >\r\n              Resetuj Filtry\r\n            </Button>\r\n\r\n            <Button onClick={() => reset(filter.columns)}>\r\n              Pokaż wszystko\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      ) : (\r\n        <p>ładowanie...</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: state.filter,\r\n  chartData: state.data,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setActiveColumn: (columns) => dispatch(activeColumnsAction(columns)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PageNavigation);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Chart from \"../components/Chart\";\r\nimport Papa from \"papaparse\";\r\nimport { addDataAction } from \"../acions/dataActions\";\r\nimport Axios from \"axios\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport MyPieChart from \"../components/MyPieChart\";\r\nimport DataTable from \"../components/DataTable\";\r\nimport PageNavigation from \"../layouts/Navigation/PageNavigation\";\r\nimport { activeColumnsAction, setColumnsAction } from \"../acions/filterActions\";\r\n\r\nexport const Charts = ({\r\n  storeData,\r\n  addData,\r\n  match,\r\n  setActiveColumns,\r\n  setColumns,\r\n  activeColumns,\r\n  columns,\r\n}) => {\r\n  const dataName = `dane${match.params.id}`;\r\n\r\n  //delete rows which not contains enough data\r\n  const deleteUnwantedRows = (array) => {\r\n    return array.filter((arr) => arr.length > 2);\r\n  };\r\n\r\n  const roundBigNumber = (n, scale = 1000) => {\r\n    return n > scale ? Math.round(n) : n;\r\n  };\r\n\r\n  const transpose = (array) => {\r\n    return array.reduce(\r\n      (prev, next) => next.map((item, i) => (prev[i] || []).concat(next[i])),\r\n      []\r\n    );\r\n  };\r\n\r\n  // replace not numerical data from matrix to avg\r\n  // last item return previous value if not number\r\n  const clearDummyData = (array) => {\r\n    const clearedArray = array.map((arr) => {\r\n      let newArr = [];\r\n      for (let i = 0; i < arr.length - 1; i++) {\r\n        newArr =\r\n          typeof arr[i - 1] === \"number\" &&\r\n          typeof arr[i] !== \"number\" &&\r\n          typeof arr[i + 1] === \"number\"\r\n            ? newArr.concat(arr[i - 1] + arr[i - 1] / 2)\r\n            : (newArr = newArr.concat(arr[i]));\r\n      }\r\n      newArr =\r\n        typeof arr[arr.length - 1] !== \"number\" &&\r\n        typeof arr[arr.length - 2] === \"number\"\r\n          ? (newArr = newArr.concat(arr[arr.length - 2]))\r\n          : (newArr = newArr.concat(arr[arr.length - 1]));\r\n      return newArr;\r\n    });\r\n    return clearedArray;\r\n  };\r\n\r\n  const roundBigData = (array) => {\r\n    let roundedData = array.map((arr) => {\r\n      const el = arr.map((e) => {\r\n        return roundBigNumber(e);\r\n      });\r\n      return el;\r\n    });\r\n    return roundedData;\r\n  };\r\n\r\n  const proceedData = (arr) => {\r\n    return roundBigData(\r\n      transpose(clearDummyData(transpose(deleteUnwantedRows(arr))))\r\n    ).join(\"\\n\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(`/data_presentation/data/${dataName}.csv`).then((result) => {\r\n      const data = Papa.parse(result.data.replace(/,/g, \".\"), {\r\n        dynamicTyping: true,\r\n      });\r\n\r\n      const correctedData = Papa.parse(proceedData(data.data), {\r\n        header: true,\r\n        dynamicTyping: true,\r\n      });\r\n      //add corrected data to store\r\n      addData(correctedData.data, dataName, correctedData.meta.fields);\r\n      //add columns to store\r\n      setColumns(correctedData.meta.fields.slice(1));\r\n    });\r\n  }, [dataName]);\r\n\r\n  const [chartData] = storeData.data.filter((el) => el.dataName === dataName);\r\n\r\n  return (\r\n    <>\r\n      {chartData ? (\r\n        <>\r\n          <PageNavigation dataName={dataName} />\r\n\r\n          <Row id=\"charts\" className=\"px-5 pt-5\">\r\n            <Col xs={8}>\r\n              <Chart\r\n                dataName={dataName}\r\n                chartData={chartData}\r\n                activeColumns={activeColumns}\r\n              />\r\n            </Col>\r\n            <Col xs={4}>\r\n              <MyPieChart\r\n                dataName={dataName}\r\n                chartData={chartData}\r\n                activeColumns={activeColumns}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row id=\"table\" className=\"justify-content-center\">\r\n            <Col xs={6}>\r\n              <DataTable\r\n                dataName={dataName}\r\n                chartData={chartData}\r\n                columns={columns}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      ) : (\r\n        <p>ładowanie...</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  storeData: state.data,\r\n  activeColumns: state.filter.activeColumns,\r\n  columns: state.filter.columns,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addData: (data, dataName, columnNames) =>\r\n      dispatch(addDataAction(data, dataName, columnNames)),\r\n    setActiveColumns: (columnNames) =>\r\n      dispatch(activeColumnsAction(columnNames)),\r\n    setColumns: (columnNames) => dispatch(setColumnsAction(columnNames)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Charts);\r\n","export const addDataAction = (data, dataName, columnNames) => {\r\n  return { type: \"ADD_DATA\", data, dataName, columnNames };\r\n};\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Homepage from \"../pages/Homepage\";\r\nimport Charts from \"../pages/Charts\";\r\n\r\nexport const Page = (props) => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Homepage} />\r\n        <Route path=\"/data_presentation/\" exact component={Homepage} />\r\n        <Route path=\"/charts/:id\" component={Charts} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Page);\r\n","import React from \"react\";\r\n\r\nexport const Footer = (props) => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport \"../../styles/AsideNavigation.css\";\r\n\r\nconst list = [\r\n  { name: \"Strona Startowa\", path: \"/\", exact: true },\r\n  { name: \"Strona A\", path: \"/charts/A\" },\r\n  { name: \"Strona B\", path: \"/charts/B\" },\r\n];\r\n\r\nconst AsideNavigation = (props) => {\r\n  const nav = list.map((item) => (\r\n    <Nav.Item key={item.name} className=\"py-2\">\r\n      <NavLink\r\n        to={item.path}\r\n        exact={item.exact ? item.exact : false}\r\n        id={item.id}\r\n        className=\"link\"\r\n      >\r\n        {item.name}\r\n      </NavLink>\r\n    </Nav.Item>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <Nav className=\"col-md-12 d-none p-0 m-0 d-md-block bg-light sidebar\">\r\n        {nav}\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AsideNavigation);\r\n","import { Col, Row, Container } from \"react-bootstrap\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport Header from \"./Header.js\";\nimport Page from \"./Page\";\nimport Footer from \"./Footer\";\nimport AsideNavigation from \"./Navigation/AsideNavigation\";\n\nfunction App() {\n  return (\n    <Router>\n      <header>\n        <Header />\n      </header>\n      <main>\n        <Container fluid>\n          <Row>\n            <Col xs={1} id=\"sidebar-wrapper\" className=\"bg-light px-0\">\n              <aside className=\"h-100\">\n                <AsideNavigation />\n              </aside>\n            </Col>\n            <Col xs={11}>\n              <Page />\n            </Col>\n          </Row>\n        </Container>\n      </main>\n      <footer>\n        <Footer />\n      </footer>\n    </Router>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n  isLoggedIn: false,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"TOGGLE_AUTH\":\r\n      return {\r\n        ...state,\r\n        isLoggedIn: !state.isLoggedIn,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = { data: [] };\r\n\r\nexport const dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_DATA\":\r\n      const alreadyIn = state.data.filter(\r\n        (el) => el.dataName === action.dataName\r\n      ).length;\r\n      if (alreadyIn) return { ...state };\r\n      return {\r\n        ...state,\r\n        data: state.data.concat({\r\n          chartData: action.data,\r\n          dataName: action.dataName,\r\n          columnNames: action.columnNames,\r\n        }),\r\n      };\r\n    case \"ACTIVE_COLUMNS\":\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  preselectedValues: [],\r\n  columns: [],\r\n  activeColumns: [],\r\n};\r\n\r\nexport const filterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ACTIVE_COLUMNS\":\r\n      const active = action.activeColumns.some((e) => e.name === \"Y1\")\r\n        ? action.activeColumns\r\n        : action.activeColumns.concat({ name: \"Y1\", id: \"Y1\" });\r\n      return {\r\n        ...state,\r\n        activeColumns: active.sort((a, b) =>\r\n          a.name < b.name ? -1 : Number(a.name > b.name)\r\n        ),\r\n      };\r\n    case \"SET_COLUMNS\":\r\n      return {\r\n        ...state,\r\n        columns: action.columns.map((col) => {\r\n          return { name: col, id: col };\r\n        }),\r\n        activeColumns: action.columns.map((e) => {\r\n          return { name: e, id: e };\r\n        }),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { authReducer } from \"./authReducer\";\r\nimport { dataReducer } from \"./dataReducer\";\r\nimport { filterReducer } from \"./filterReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  data: dataReducer,\r\n  filter: filterReducer,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./layouts/App\";\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { rootReducer } from \"./reducers/combinedReducer\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}